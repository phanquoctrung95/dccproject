var cov_y7j994bt1=function(){var path='D:\\DCC\\DCC\\server\\models\\emailFeedback.js',hash='75243903029527bd0326e4e46c29a0aacddccb69',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'D:\\DCC\\DCC\\server\\models\\emailFeedback.js',statementMap:{'0':{start:{line:1,column:26},end:{line:1,column:64}},'1':{start:{line:3,column:0},end:{line:44,column:2}},'2':{start:{line:4,column:24},end:{line:42,column:6}},'3':{start:{line:24,column:16},end:{line:30,column:32}},'4':{start:{line:34,column:28},end:{line:34,column:152}},'5':{start:{line:35,column:16},end:{line:37,column:35}},'6':{start:{line:43,column:4},end:{line:43,column:25}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:38},end:{line:44,column:1}},line:3},'1':{name:'(anonymous_1)',decl:{start:{line:23,column:45},end:{line:23,column:46}},loc:{start:{line:23,column:59},end:{line:31,column:13}},line:23},'2':{name:'(anonymous_2)',decl:{start:{line:33,column:17},end:{line:33,column:18}},loc:{start:{line:33,column:61},end:{line:38,column:13}},line:33}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},f:{'0':0,'1':0,'2':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _emailFeedbackModel=(cov_y7j994bt1.s[0]++,require("./DataObjects/emailFeedback"));cov_y7j994bt1.s[1]++;module.exports=function(sequelize){cov_y7j994bt1.f[0]++;var emailFeedback=(cov_y7j994bt1.s[2]++,sequelize.define('emailFeedback',_emailFeedbackModel,{charset:'utf8',collate:'utf8_unicode_ci',classMethods:{// // Info about user is email_user, user id, class_id don't feedback which is value's return
// getAllInfoAboutUserDontFeedback: function (cb) {
//     sequelize.query('select distinct user.email, class_record.traineeId, class_record.classId '
//                 + ' from user, class_record, email_feedback '
//                 + '  where user.id = class_record.traineeId '
//                     + ' and class_record.traineeId not in (SELECT DISTINCT user.id '
//                                                         + ' FROM class_record, user '
//                                                         + ' WHERE LENGTH(class_record.improve_comments) >= 0 and class_record.traineeId = user.id) '
//                     + '  and (class_record.traineeId, class_record.classId) not in (SELECT email_feedback.userID as user, email_feedback.class_id_not_feedback as class '
//                                                                                 + ' from email_feedback) ', {
//                         type: sequelize.QueryTypes.SELECT
//         }).then(cb);
// },
// Info about user is email_user, user id, class_id don't feedback which is value's return
getAllInfoAboutUserDontFeedback:function(cb){cov_y7j994bt1.f[1]++;cov_y7j994bt1.s[3]++;sequelize.query('SELECT DISTINCT user.email, user.id as traineeId, class_record.classId FROM class_record, user '+' WHERE user.id = class_record.traineeId and user.email '+' not in (SELECT DISTINCT user.email '+' FROM class_record, user WHERE LENGTH(class_record.improve_comments) >= 0 and user.id = class_record.traineeId) AND (user.id,class_record.classId ) '+' NOT IN ( SELECT email_feedback.userID, email_feedback.class_id_not_feedback FROM email_feedback) ',{type:sequelize.QueryTypes.SELECT}).then(cb);},add:function(email,userID,classID,callback){cov_y7j994bt1.f[2]++;var query=(cov_y7j994bt1.s[4]++,"INSERT INTO email_feedback(email_user,userID,class_id_not_feedback) VALUES ('"+email+"',"+userID+","+classID+")");cov_y7j994bt1.s[5]++;sequelize.query(query,{type:sequelize.QueryTypes.INSERT}).then(callback);}},tableName:'email_feedback',timestamps:false}));cov_y7j994bt1.s[6]++;return emailFeedback;};