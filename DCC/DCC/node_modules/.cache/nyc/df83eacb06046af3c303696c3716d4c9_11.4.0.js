var cov_thuq7rty8=function(){var path='D:\\DCC\\DCC\\server\\routes\\trainee\\dashboard.js',hash='9aadacb53f6581901db6008087e4b41ce7069f67',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'D:\\DCC\\DCC\\server\\routes\\trainee\\dashboard.js',statementMap:{'0':{start:{line:1,column:13},end:{line:1,column:40}},'1':{start:{line:2,column:13},end:{line:2,column:36}},'2':{start:{line:3,column:10},end:{line:3,column:47}},'3':{start:{line:4,column:16},end:{line:4,column:36}},'4':{start:{line:6,column:13},end:{line:6,column:30}},'5':{start:{line:7,column:14},end:{line:14,column:2}},'6':{start:{line:9,column:8},end:{line:9,column:45}},'7':{start:{line:12,column:8},end:{line:12,column:78}},'8':{start:{line:18,column:13},end:{line:20,column:8}},'9':{start:{line:22,column:0},end:{line:42,column:3}},'10':{start:{line:23,column:16},end:{line:33,column:5}},'11':{start:{line:34,column:4},end:{line:41,column:6}},'12':{start:{line:35,column:23},end:{line:39,column:9}},'13':{start:{line:40,column:8},end:{line:40,column:27}},'14':{start:{line:43,column:0},end:{line:102,column:3}},'15':{start:{line:44,column:18},end:{line:44,column:28}},'16':{start:{line:45,column:16},end:{line:45,column:26}},'17':{start:{line:46,column:2},end:{line:46,column:64}},'18':{start:{line:47,column:2},end:{line:47,column:58}},'19':{start:{line:49,column:2},end:{line:49,column:24}},'20':{start:{line:50,column:2},end:{line:50,column:26}},'21':{start:{line:51,column:2},end:{line:51,column:26}},'22':{start:{line:52,column:2},end:{line:52,column:23}},'23':{start:{line:53,column:2},end:{line:53,column:25}},'24':{start:{line:54,column:2},end:{line:54,column:25}},'25':{start:{line:56,column:14},end:{line:79,column:3}},'26':{start:{line:80,column:2},end:{line:101,column:5}},'27':{start:{line:82,column:17},end:{line:82,column:19}},'28':{start:{line:83,column:5},end:{line:94,column:9}},'29':{start:{line:84,column:8},end:{line:93,column:11}},'30':{start:{line:95,column:21},end:{line:99,column:7}},'31':{start:{line:100,column:6},end:{line:100,column:25}},'32':{start:{line:156,column:0},end:{line:219,column:3}},'33':{start:{line:157,column:16},end:{line:177,column:5}},'34':{start:{line:178,column:4},end:{line:218,column:7}},'35':{start:{line:179,column:22},end:{line:179,column:24}},'36':{start:{line:181,column:8},end:{line:211,column:11}},'37':{start:{line:182,column:12},end:{line:182,column:42}},'38':{start:{line:183,column:12},end:{line:210,column:13}},'39':{start:{line:186,column:16},end:{line:186,column:46}},'40':{start:{line:188,column:36},end:{line:188,column:38}},'41':{start:{line:189,column:16},end:{line:198,column:19}},'42':{start:{line:190,column:20},end:{line:197,column:23}},'43':{start:{line:191,column:24},end:{line:196,column:27}},'44':{start:{line:192,column:28},end:{line:195,column:29}},'45':{start:{line:193,column:32},end:{line:193,column:62}},'46':{start:{line:194,column:32},end:{line:194,column:59}},'47':{start:{line:199,column:16},end:{line:209,column:17}},'48':{start:{line:200,column:20},end:{line:208,column:23}},'49':{start:{line:212,column:23},end:{line:216,column:9}},'50':{start:{line:217,column:8},end:{line:217,column:27}},'51':{start:{line:251,column:0},end:{line:273,column:3}},'52':{start:{line:252,column:16},end:{line:263,column:5}},'53':{start:{line:264,column:4},end:{line:272,column:7}},'54':{start:{line:265,column:23},end:{line:269,column:9}},'55':{start:{line:271,column:8},end:{line:271,column:27}},'56':{start:{line:384,column:0},end:{line:396,column:3}},'57':{start:{line:385,column:4},end:{line:395,column:6}},'58':{start:{line:390,column:23},end:{line:393,column:9}},'59':{start:{line:394,column:8},end:{line:394,column:27}},'60':{start:{line:398,column:0},end:{line:433,column:3}},'61':{start:{line:399,column:16},end:{line:401,column:5}},'62':{start:{line:403,column:4},end:{line:432,column:7}},'63':{start:{line:404,column:8},end:{line:431,column:11}},'64':{start:{line:405,column:26},end:{line:405,column:28}},'65':{start:{line:407,column:12},end:{line:424,column:15}},'66':{start:{line:408,column:16},end:{line:423,column:17}},'67':{start:{line:409,column:39},end:{line:409,column:41}},'68':{start:{line:410,column:20},end:{line:412,column:22}},'69':{start:{line:411,column:24},end:{line:411,column:58}},'70':{start:{line:413,column:20},end:{line:422,column:22}},'71':{start:{line:425,column:27},end:{line:429,column:13}},'72':{start:{line:430,column:12},end:{line:430,column:31}},'73':{start:{line:435,column:0},end:{line:472,column:3}},'74':{start:{line:436,column:16},end:{line:452,column:5}},'75':{start:{line:453,column:4},end:{line:471,column:7}},'76':{start:{line:454,column:20},end:{line:454,column:22}},'77':{start:{line:455,column:6},end:{line:464,column:9}},'78':{start:{line:456,column:10},end:{line:463,column:17}},'79':{start:{line:465,column:21},end:{line:469,column:7}},'80':{start:{line:470,column:6},end:{line:470,column:25}},'81':{start:{line:473,column:0},end:{line:473,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:48},end:{line:10,column:5}},line:8},'1':{name:'(anonymous_1)',decl:{start:{line:11,column:14},end:{line:11,column:15}},loc:{start:{line:11,column:45},end:{line:13,column:5}},line:11},'2':{name:'(anonymous_2)',decl:{start:{line:22,column:45},end:{line:22,column:46}},loc:{start:{line:22,column:64},end:{line:42,column:1}},line:22},'3':{name:'(anonymous_3)',decl:{start:{line:34,column:38},end:{line:34,column:39}},loc:{start:{line:34,column:48},end:{line:41,column:5}},line:34},'4':{name:'(anonymous_4)',decl:{start:{line:43,column:34},end:{line:43,column:35}},loc:{start:{line:43,column:51},end:{line:102,column:1}},line:43},'5':{name:'(anonymous_5)',decl:{start:{line:80,column:35},end:{line:80,column:36}},loc:{start:{line:80,column:57},end:{line:101,column:3}},line:80},'6':{name:'(anonymous_6)',decl:{start:{line:83,column:24},end:{line:83,column:25}},loc:{start:{line:83,column:37},end:{line:94,column:7}},line:83},'7':{name:'(anonymous_7)',decl:{start:{line:156,column:43},end:{line:156,column:44}},loc:{start:{line:156,column:63},end:{line:219,column:1}},line:156},'8':{name:'(anonymous_8)',decl:{start:{line:178,column:47},end:{line:178,column:48}},loc:{start:{line:178,column:75},end:{line:218,column:5}},line:178},'9':{name:'(anonymous_9)',decl:{start:{line:181,column:33},end:{line:181,column:34}},loc:{start:{line:181,column:52},end:{line:211,column:9}},line:181},'10':{name:'(anonymous_10)',decl:{start:{line:189,column:48},end:{line:189,column:49}},loc:{start:{line:189,column:58},end:{line:198,column:17}},line:189},'11':{name:'(anonymous_11)',decl:{start:{line:190,column:43},end:{line:190,column:44}},loc:{start:{line:190,column:54},end:{line:197,column:21}},line:190},'12':{name:'(anonymous_12)',decl:{start:{line:191,column:53},end:{line:191,column:54}},loc:{start:{line:191,column:68},end:{line:196,column:25}},line:191},'13':{name:'(anonymous_13)',decl:{start:{line:251,column:37},end:{line:251,column:38}},loc:{start:{line:251,column:57},end:{line:273,column:1}},line:251},'14':{name:'(anonymous_14)',decl:{start:{line:264,column:38},end:{line:264,column:39}},loc:{start:{line:264,column:56},end:{line:272,column:5}},line:264},'15':{name:'(anonymous_15)',decl:{start:{line:384,column:28},end:{line:384,column:29}},loc:{start:{line:384,column:48},end:{line:396,column:1}},line:384},'16':{name:'(anonymous_16)',decl:{start:{line:389,column:12},end:{line:389,column:13}},loc:{start:{line:389,column:28},end:{line:395,column:5}},line:389},'17':{name:'(anonymous_17)',decl:{start:{line:398,column:35},end:{line:398,column:36}},loc:{start:{line:398,column:55},end:{line:433,column:1}},line:398},'18':{name:'(anonymous_18)',decl:{start:{line:403,column:56},end:{line:403,column:57}},loc:{start:{line:403,column:73},end:{line:432,column:5}},line:403},'19':{name:'(anonymous_19)',decl:{start:{line:404,column:42},end:{line:404,column:43}},loc:{start:{line:404,column:61},end:{line:431,column:9}},line:404},'20':{name:'(anonymous_20)',decl:{start:{line:407,column:28},end:{line:407,column:29}},loc:{start:{line:407,column:38},end:{line:424,column:13}},line:407},'21':{name:'(anonymous_21)',decl:{start:{line:410,column:51},end:{line:410,column:52}},loc:{start:{line:410,column:62},end:{line:412,column:21}},line:410},'22':{name:'(anonymous_22)',decl:{start:{line:435,column:41},end:{line:435,column:42}},loc:{start:{line:435,column:61},end:{line:472,column:1}},line:435},'23':{name:'(anonymous_23)',decl:{start:{line:453,column:37},end:{line:453,column:38}},loc:{start:{line:453,column:65},end:{line:471,column:5}},line:453},'24':{name:'(anonymous_24)',decl:{start:{line:455,column:31},end:{line:455,column:32}},loc:{start:{line:455,column:48},end:{line:464,column:7}},line:455}},branchMap:{'0':{loc:{start:{line:183,column:12},end:{line:210,column:13}},type:'if',locations:[{start:{line:183,column:12},end:{line:210,column:13}},{start:{line:183,column:12},end:{line:210,column:13}}],line:183},'1':{loc:{start:{line:183,column:16},end:{line:185,column:91}},type:'binary-expr',locations:[{start:{line:183,column:16},end:{line:183,column:69}},{start:{line:184,column:16},end:{line:184,column:62}},{start:{line:185,column:17},end:{line:185,column:40}},{start:{line:185,column:44},end:{line:185,column:90}}],line:183},'2':{loc:{start:{line:192,column:28},end:{line:195,column:29}},type:'if',locations:[{start:{line:192,column:28},end:{line:195,column:29}},{start:{line:192,column:28},end:{line:195,column:29}}],line:192},'3':{loc:{start:{line:199,column:16},end:{line:209,column:17}},type:'if',locations:[{start:{line:199,column:16},end:{line:209,column:17}},{start:{line:199,column:16},end:{line:209,column:17}}],line:199},'4':{loc:{start:{line:408,column:16},end:{line:423,column:17}},type:'if',locations:[{start:{line:408,column:16},end:{line:423,column:17}},{start:{line:408,column:16},end:{line:423,column:17}}],line:408}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0},b:{'0':[0,0],'1':[0,0,0,0],'2':[0,0],'3':[0,0],'4':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var router=(cov_thuq7rty8.s[0]++,require('express').Router());var models=(cov_thuq7rty8.s[1]++,require('../../models'));var log=(cov_thuq7rty8.s[2]++,require('../../config/config')["log"]);var sequelize=(cov_thuq7rty8.s[3]++,require('sequelize'));// Upload file setting
var multer=(cov_thuq7rty8.s[4]++,require('multer'));var storage=(cov_thuq7rty8.s[5]++,multer.diskStorage({destination:function(req,file,callback){cov_thuq7rty8.f[0]++;cov_thuq7rty8.s[6]++;callback(null,'./client/exercises');},filename:function(req,file,callback){cov_thuq7rty8.f[1]++;cov_thuq7rty8.s[7]++;callback(null,file.fieldname+'-'+Date.now()+file.originalname);}}));// var upload = multer({
//     storage: storage
// }).single('userPhoto');
var upload=(cov_thuq7rty8.s[8]++,multer({storage:storage}).any());cov_thuq7rty8.s[9]++;router.post('/getInfoNotificationByClassId',function(req,res){cov_thuq7rty8.f[2]++;var query=(cov_thuq7rty8.s[10]++,{include:[{model:models.Class,include:[{model:models.User}],where:{id:req.body.classId}}]});cov_thuq7rty8.s[11]++;models.Course.findOne(query).then(data=>{cov_thuq7rty8.f[3]++;var datasend=(cov_thuq7rty8.s[12]++,{success:true,msg:'send list success',data:data});cov_thuq7rty8.s[13]++;res.send(datasend);});});cov_thuq7rty8.s[14]++;router.post('/getClassesThisWeek',function(req,res){cov_thuq7rty8.f[4]++;var startTime=(cov_thuq7rty8.s[15]++,new Date());var endTime=(cov_thuq7rty8.s[16]++,new Date());cov_thuq7rty8.s[17]++;startTime.setDate(startTime.getDate()-(startTime.getDay()-1));// get date of Monday
cov_thuq7rty8.s[18]++;endTime.setDate(endTime.getDate()+(7-endTime.getDay()));// get date of Sunday
cov_thuq7rty8.s[19]++;startTime.setHours(0);cov_thuq7rty8.s[20]++;startTime.setMinutes(0);cov_thuq7rty8.s[21]++;startTime.setSeconds(0);cov_thuq7rty8.s[22]++;endTime.setHours(23);cov_thuq7rty8.s[23]++;endTime.setMinutes(59);cov_thuq7rty8.s[24]++;endTime.setSeconds(59);var query=(cov_thuq7rty8.s[25]++,{include:[{model:models.ClassRecord,where:{traineeId:req.body.traineeId//status: req.body.status
}},{model:models.Course}],where:{$and:[{startTime:{$gte:startTime},endTime:{$lte:endTime}}]}});cov_thuq7rty8.s[26]++;models.Class.findAll(query).then(function(allCourses){cov_thuq7rty8.f[5]++;//  var allCourses;
var resData=(cov_thuq7rty8.s[27]++,[]);cov_thuq7rty8.s[28]++;allCourses.forEach(allCourse=>{cov_thuq7rty8.f[6]++;cov_thuq7rty8.s[29]++;resData.push({id:allCourse.id,location:allCourse.location,name:allCourse.Course.name,imgLink:allCourse.Course.imgLink,description:allCourse.Course.description,documents:allCourse.Course.documents,startTime:allCourse.startTime,endTime:allCourse.endTime});});var datasend=(cov_thuq7rty8.s[30]++,{success:true,msg:'send list success',allCourse:resData});cov_thuq7rty8.s[31]++;res.send(datasend);});});//get classes Learned
// router.post('/getClassesLearned',function(req,res){
//   var startTime = new Date();
//   var endTime = new Date();
//   startTime.setDate(startTime.getDate()-(startTime.getDay()-1)); // get date of Monday
//   endTime.setDate(endTime.getDate()+(7-endTime.getDay())); // get date of Sunday
//   var query = {
//       include: [{
//               model: models.ClassRecord,
//               where:{
//                  traineeId : req.body.traineeId,
//                  status: req.body.status
//               }
//           },
//           {
//               model: models.Course
//           }
//       ],
//       where:
//       {
//           $and: [{
//                   startTime: {
//                     $gte: startTime
//                   },
//                   endTime: {
//                     $lte: endTime
//                   }
//                 }]
//       }
//   };
//   models.Class.findAll(query).then(function (allCourses) {
//     //  var allCourses;
//     var resData =[];
//      allCourses.forEach(allCourse => {
//         resData.push({
//             id: allCourse.id,
//             location:allCourse.location,
//             name: allCourse.Course.name,
//             imgLink:allCourse.Course.imgLink,
//             description: allCourse.Course.description,
//             documents: allCourse.Course.documents,
//             startTime: allCourse.startTime,
//             endTime: allCourse.endTime
//         });
//       });
//       var datasend = {
//           success: true,
//           msg: 'send list success',
//           allCourse: resData,
//       };
//       res.send(datasend);
//   });
// });
cov_thuq7rty8.s[32]++;router.post('/getTrainingProgramByTPType',function(req,res){cov_thuq7rty8.f[7]++;var query=(cov_thuq7rty8.s[33]++,{include:[{model:models.CourseType},{model:models.Course,include:[{model:models.Class,include:[{model:models.sessionClassTime},{model:models.ClassRecord,include:[models.User]}]}]}]});cov_thuq7rty8.s[34]++;models.TrainingProgram.findAll(query).then(function(trainingPrograms){cov_thuq7rty8.f[8]++;var resData=(cov_thuq7rty8.s[35]++,[]);var checkLearnedOptionalClass;cov_thuq7rty8.s[36]++;trainingPrograms.forEach(trainingProgram=>{cov_thuq7rty8.f[9]++;cov_thuq7rty8.s[37]++;checkLearnedOptionalClass=0;cov_thuq7rty8.s[38]++;if((cov_thuq7rty8.b[1][0]++,trainingProgram.CourseType.name===req.body.userType)||(cov_thuq7rty8.b[1][1]++,trainingProgram.CourseType.name==='EVERYONE')||(cov_thuq7rty8.b[1][2]++,!req.body.isExperienced)&&(cov_thuq7rty8.b[1][3]++,trainingProgram.CourseType.name==='OPTIONAL')){cov_thuq7rty8.b[0][0]++;cov_thuq7rty8.s[39]++;resData.push(trainingProgram);}else{cov_thuq7rty8.b[0][1]++;var resDataCourse=(cov_thuq7rty8.s[40]++,[]);cov_thuq7rty8.s[41]++;trainingProgram.Courses.forEach(course=>{cov_thuq7rty8.f[10]++;cov_thuq7rty8.s[42]++;course.Classes.forEach(classes=>{cov_thuq7rty8.f[11]++;cov_thuq7rty8.s[43]++;classes.ClassRecords.forEach(classRecord=>{cov_thuq7rty8.f[12]++;cov_thuq7rty8.s[44]++;if(classRecord.User.email===req.body.email){cov_thuq7rty8.b[2][0]++;cov_thuq7rty8.s[45]++;checkLearnedOptionalClass=1;cov_thuq7rty8.s[46]++;resDataCourse.push(course);}else{cov_thuq7rty8.b[2][1]++;}});});});cov_thuq7rty8.s[47]++;if(checkLearnedOptionalClass===1){cov_thuq7rty8.b[3][0]++;cov_thuq7rty8.s[48]++;resData.push({id:trainingProgram.id,name:trainingProgram.name,description:trainingProgram.description,imgLink:trainingProgram.imgLink,courseTypeId:trainingProgram.courseTypeId,CourseType:trainingProgram.CourseType,Courses:resDataCourse});}else{cov_thuq7rty8.b[3][1]++;}}});var datasend=(cov_thuq7rty8.s[49]++,{success:true,msg:'send list success',trainingProgram:resData});cov_thuq7rty8.s[50]++;res.send(datasend);});});// router.post('/saveFileUpload',function(req,res){
//   //Save file upload
//   upload(req, res, function () {
//       var userid = req.headers.userid;
//       var classid = req.headers.classid;
//       models.ClassRecord.getTraineeClassbyId(userid,classid, function (class_record) {
//           if(class_record){
//           models.ClassRecord.update({
//               exercises: '/exercises/' + req.files[0].filename,
//           }, {
//               where: {
//                   classId: userid,
//                   traineeId:classid
//               }
//           }).then(function () {
//             var datasend = {
//                 success: true,
//                 data: req.files[0].filename
//             };
//             res.send(datasend)
//           });
//         }else{
//           var datasend = {
//               success:false,
//               data: req.files[0].filename
//           };
//           res.send(datasend)
//         }
//       });
//   });
// });
cov_thuq7rty8.s[51]++;router.post('/getRequestOpenCourse',function(req,res){cov_thuq7rty8.f[13]++;var query=(cov_thuq7rty8.s[52]++,{include:[{model:models.Class},{model:models.RequestOpening,where:{userId:req.body.userId}}]});cov_thuq7rty8.s[53]++;models.Course.findAll(query).then(function(course){cov_thuq7rty8.f[14]++;var datasend=(cov_thuq7rty8.s[54]++,{success:true,msg:'send list success',data:course});cov_thuq7rty8.s[55]++;res.send(datasend);});});// router.get('/mailEnrollClassResponse', (req, res) => {
//     var response = req.query.response;
//     var email = req.query.email;
//     var courseID = req.query.courseID;
//     var classID = req.query.classID;
//     var hash = req.query.hash;
// // this is callback hell, if you have time, please fix it. Thanks :)
//     // check whatever the user submitted the request
//     models.EmailResponseStatus.findOne({
//         where: {
//             email: email,
//             hash: hash
//         }
//     }).then((emailResponseStatus) => {
//         if (emailResponseStatus) {
//             if (emailResponseStatus.status === 0) {
//                 //update status
//                 models.EmailResponseStatus.updateStatus(email, hash, 1, (result) => {
//                     if (result) {
//                         //email => userID
//                         models.User.getUserByEmail(email, (user) => {
//                             var userID = user.id;
//                             models.RequestOpening.findRequestOpenningCourse(userID, courseID, (requestCourseOpenning) => {
//                                 if (requestCourseOpenning) {
//                                     if (response === 1) { // accept mail
//                                         models.ClassRecord.findTraineeEnrolledClass(userID, classID, (classRecord) => {
//                                             if (!classRecord) {
//                                                 models.Class.findOne({
//                                                     where: {
//                                                         id: classID
//                                                     }
//                                                 }).then(result => {
//                                                     if( Date.parse(result.endTime) > Date.parse(new Date()) ) {
//                                                         models.ClassRecord.create({
//                                                             classId: classID,
//                                                             traineeId: userID,
//                                                             status: "Enrolled"
//                                                         }).then((data) => {
//                                                             if (data) {
//                                                                 res.send("Enroll successful");
//                                                             }
//                                                         });
//                                                     }
//                                                     else {
//                                                         res.send("Your class is closed");
//                                                     }
//                                                 })
//                                             } else {
//                                                 res.send("You enrolled");
//                                             }
//                                         });
//                                     } else {
//                                         models.RequestOpening.deleteRequestOpening(userID, courseID, () => {
//                                             res.send('Delete Request Opening Success');
//                                         });
//                                     }
//                                 } else {
//                                     if (response === 1) { // accept mail
//                                         models.ClassRecord.findTraineeEnrolledClass(userID, classID, (classRecord) => {
//                                             if (!classRecord) {
//                                                 models.Class.findOne({
//                                                     where: {
//                                                         id: classID
//                                                     }
//                                                 }).then(result => {
//                                                     if( Date.parse(result.endTime) > Date.parse(new Date()) ) {
//                                                         models.ClassRecord.create({
//                                                             classId: classID,
//                                                             traineeId: userID,
//                                                             status: "Enrolled"
//                                                         }).then((data) => {
//                                                             if (data) {
//                                                                 res.send("Enroll successful");
//                                                             }
//                                                         });
//                                                     }
//                                                     else {
//                                                         res.send("Your class is closed");
//                                                     }
//                                                 })
//                                             } else {
//                                                 res.send("You enrolled");
//                                             }
//                                         });
//                                     } else {
//                                         res.send("You canceled this class");
//                                     }
//                                 }
//                             })
//                         });
//                     }
//                     else {
//                         res.send("Something wrong, please check your request again!");
//                     }
//                 })
//             } else {
//                 res.send("You have already sent request!");
//             }
//         } else {
//             res.send("Something wrong, please check your request again!");
//         }
//     })
// });
cov_thuq7rty8.s[56]++;router.post('/enrollClass',function(req,res){cov_thuq7rty8.f[15]++;cov_thuq7rty8.s[57]++;models.ClassRecord.create({classId:req.body.classId,traineeId:req.body.userId,status:"Enrolled"}).then(function(data){cov_thuq7rty8.f[16]++;var dataSend=(cov_thuq7rty8.s[58]++,{success:true,data:data});cov_thuq7rty8.s[59]++;res.send(dataSend);});});cov_thuq7rty8.s[60]++;router.get('/getDemandOpenCourse',function(req,res){cov_thuq7rty8.f[17]++;var query=(cov_thuq7rty8.s[61]++,{include:[models.RequestOpening]});// get number to define high demand from adminSetting
cov_thuq7rty8.s[62]++;models.Setting.getSettingByName("numberHighDemand",function(setting){cov_thuq7rty8.f[18]++;cov_thuq7rty8.s[63]++;models.Course.findAll(query).then(function(courses){cov_thuq7rty8.f[19]++;var resData=(cov_thuq7rty8.s[64]++,[]);// check if have request openning
cov_thuq7rty8.s[65]++;courses.forEach(course=>{cov_thuq7rty8.f[20]++;cov_thuq7rty8.s[66]++;if(course.RequestOpenings.length>=setting.value){cov_thuq7rty8.b[4][0]++;var requestUsers=(cov_thuq7rty8.s[67]++,[]);cov_thuq7rty8.s[68]++;course.RequestOpenings.forEach(request=>{cov_thuq7rty8.f[21]++;cov_thuq7rty8.s[69]++;requestUsers.push(request.userId);});cov_thuq7rty8.s[70]++;resData.push({course:{id:course.id,name:course.name,description:course.description,imgLink:course.imgLink},numberOfRequest:course.RequestOpenings.length,traineeList:requestUsers});}else{cov_thuq7rty8.b[4][1]++;}});var datasend=(cov_thuq7rty8.s[71]++,{success:true,msg:'send list success',data:resData});cov_thuq7rty8.s[72]++;res.send(datasend);});});});cov_thuq7rty8.s[73]++;router.post('/getClassesNeedToFeedBack',function(req,res){cov_thuq7rty8.f[22]++;var query=(cov_thuq7rty8.s[74]++,{include:[{model:models.Course},{model:models.ClassRecord,where:{traineeId:req.body.traineeId,status:"Learned",bestThing_comments:null,trainer_rating:null,improve_comments:null,content_rating:null,happy_rating:null}}]});cov_thuq7rty8.s[75]++;models.Class.findAll(query).then(function(allClassFeedback){cov_thuq7rty8.f[23]++;var resData=(cov_thuq7rty8.s[76]++,[]);cov_thuq7rty8.s[77]++;allClassFeedback.forEach(classFeedback=>{cov_thuq7rty8.f[24]++;cov_thuq7rty8.s[78]++;resData.push({classId:classFeedback.id,name:classFeedback.Course.name,imgLink:classFeedback.Course.imgLink,startTime:classFeedback.startTime,endTime:classFeedback.endTime,location:classFeedback.location});});var datasend=(cov_thuq7rty8.s[79]++,{success:true,msg:'send list success',data:resData});cov_thuq7rty8.s[80]++;res.send(datasend);});});cov_thuq7rty8.s[81]++;module.exports=router;